{
    "version": "https://jsonfeed.org/version/1",
    "title": "黑色天际线的博客空间",
    "subtitle": "天高路远，逆水行云",
    "icon": "https://github.com/Black-Skyline/Black-Skyline.github.io/images/favicon.ico",
    "description": "此博客空间为个人学习笔记上传处",
    "home_page_url": "https://github.com/Black-Skyline/Black-Skyline.github.io",
    "items": [
        {
            "id": "https://github.com/Black-Skyline/Black-Skyline.github.io/2023/10/29/%E6%9B%B4%E5%A4%9A/%E4%BD%9C%E4%B8%9A/RedRock-SRE-%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A/",
            "url": "https://github.com/Black-Skyline/Black-Skyline.github.io/2023/10/29/%E6%9B%B4%E5%A4%9A/%E4%BD%9C%E4%B8%9A/RedRock-SRE-%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A/",
            "title": "RedRock_SRE_第一次课后作业",
            "date_published": "2023-10-29T12:54:29.000Z",
            "content_html": "<h1 id=\"level-0\"><a class=\"anchor\" href=\"#level-0\">#</a> Level 0 :</h1>\n<h6 id=\"the-first-step\"><a class=\"anchor\" href=\"#the-first-step\">#</a> the first step</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd Desktop/</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"the-second-step\"><a class=\"anchor\" href=\"#the-second-step\">#</a> the second step</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir test_file</span><br><span class=\"line\">cd test_file/</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"the-third-step\"><a class=\"anchor\" href=\"#the-third-step\">#</a> the third  step</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch hello\\ world.c</span><br><span class=\"line\">#touch &#x27;hello world.c&#x27;</span><br><span class=\"line\">#touch &quot;hello world.c&quot;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"the-fourth-step\"><a class=\"anchor\" href=\"#the-fourth-step\">#</a> the fourth step</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim hello\\ world.c</span><br></pre></td></tr></table></figure></p>\n<p><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Write the following code to &#x27;hello world.c&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;hello redrock!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"the-fifth-step\"><a class=\"anchor\" href=\"#the-fifth-step\">#</a> the fifth  step</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcc hello\\ world -o hello\\ world</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"the-sixth-step\"><a class=\"anchor\" href=\"#the-sixth-step\">#</a> the sixth step</h6>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./hello\\ world</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"the-final-display\"><a class=\"anchor\" href=\"#the-final-display\">#</a> the final display</h6>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210222110024.png\" alt=\"level_1_display\" /></p>\n<p>这里输出的不是 <code>hello, world</code> ，但也差不多（doge）</p>\n<h1 id=\"level-11\"><a class=\"anchor\" href=\"#level-11\">#</a> Level 1.1 :</h1>\n<blockquote>\n<h6 id=\"一个简单的个人博客空间搭建\"><a class=\"anchor\" href=\"#一个简单的个人博客空间搭建\">#</a> 一个简单的个人博客空间搭建</h6>\n<h4 id=\"搭建方式\"><a class=\"anchor\" href=\"#搭建方式\">#</a> 搭建方式：</h4>\n<p><strong>Hexo</strong> + <strong>GitHub Page</strong></p>\n<h4 id=\"材料准备\"><a class=\"anchor\" href=\"#材料准备\">#</a> 材料（准备）：</h4>\n<p>工具类：<strong>git 、 hexo</strong></p>\n<p>环境类：<strong>Node.js 、 github</strong></p>\n</blockquote>\n<h3 id=\"正式开始前的准备\"><a class=\"anchor\" href=\"#正式开始前的准备\">#</a> 正式开始前的准备</h3>\n<h4 id=\"首先\"><a class=\"anchor\" href=\"#首先\">#</a> 首先，</h4>\n<p>要将 <code>git</code>  和  <code>Node.js</code>  从官网上下载到本地，过程这里不过多地赘述（node.js 建议下载长期支持版、git 则是下载最新版），（对于 windows 操作系统而言）下载好之后地两个程序并不是我们需要的材料本体，而是安装程序，如图：</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210222131524.jpg\" alt=\"NodeJs安装程序展示\" /></p>\n<p>点击执行安装程序后，除了安装路径以外，其他选项按照默认的一直点击 next 就行，但值得一提的是，对于新手来说，安装 git 时建议勾选上 “git bash here”，安装 Node.js 时遇到含有 PATH 选项时，一定要选择将其勾选上（自动帮你把 node.js 添加到环境变量），而且 node.js 相关工具包下载也建议勾选上；</p>\n<h4 id=\"其次\"><a class=\"anchor\" href=\"#其次\">#</a> 其次，</h4>\n<p>在安装完成后，输入如下代码：</p>\n<p><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node -v  //  检查node.js版本信息</span><br><span class=\"line\">npm -v  //  检查Node包管理器的版本信息</span><br><span class=\"line\">git --version  //  检查git版本信息</span><br></pre></td></tr></table></figure></p>\n<p>若安装成功，则效果如下图（会出现版本信息），否则，应该是安装过程出了岔子，要重新安装一次：（）</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210222146473.jpg\" alt=\"检查版本信息\" /></p>\n<h4 id=\"然后\"><a class=\"anchor\" href=\"#然后\">#</a> 然后，</h4>\n<p>给  <code>npm</code>  设置成阿里的国内镜像：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></p>\n<p>利用  <code>npm</code>  在命令行中安装 <code>hexo</code>  ，输入下面的代码</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g  <span class=\"comment\"># 意思是用npm工具将hexo-cli包进行全局安装，使得在本地任何位置都能调用hexo-cli</span></span><br></pre></td></tr></table></figure></p>\n<p>同样的，安装完成后输入 <code>hexo -v</code>  检查安装是否成功，道理和效果图类似上方，完成之后，</p>\n<p>开始配置 GitHub 相关；</p>\n<p>若没有 github 账号，就到  <s><strong>（全球最大程序员交流交友平台）</strong></s>  GitHub 官网去注册账号，注册成功后来到首页在右上角点击加号并新建一个 github 仓库（new repository）：</p>\n<p><img src=\"https://pic4.zhimg.com/80/v2-d540634267b3fbffa9d3bd887cc66827_720w.webp\" alt=\"\" /></p>\n<p>创建选项如下图：</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210222212075.jpg\" alt=\"创建GitHub仓库\" /></p>\n<h5 id=\"重点记录该仓库的地址网址httpsgithubcomblack-skylineblack-skylinegithubio\"><a class=\"anchor\" href=\"#重点记录该仓库的地址网址httpsgithubcomblack-skylineblack-skylinegithubio\">#</a> 重点，记录该仓库的地址 (网址)： <code>https://github.com/Black-Skyline/Black-Skyline.github.io</code></h5>\n<p>另外，git 也需要提前配置一下，随便找个位置进入 git 命令行，然后输入：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 配置用户名和邮箱</span><br><span class=\"line\">git config --global user.name &quot;github 用户名&quot;  </span><br><span class=\"line\">git config --global user.email &quot;github 注册邮箱&quot;</span><br><span class=\"line\"># 与github弄成同一个用户名方便管理，邮箱是全称，如：1234@qq.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 然后检查是否配置成功</span><br><span class=\"line\">git config -l</span><br><span class=\"line\"># 若出现有下面两行提示信息，则配置成功</span><br><span class=\"line\">user.email=···(上面配置的邮箱)</span><br><span class=\"line\">user.name=···(上面配置的用户名)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"开始建站\"><a class=\"anchor\" href=\"#开始建站\">#</a> 开始建站，</h3>\n<h4 id=\"首先-2\"><a class=\"anchor\" href=\"#首先-2\">#</a> 首先，</h4>\n<p>选择一个文件夹（或新建）作为博客网站在本地的存储位置，我的选择是：&quot;D:\\HexoBlog\\FirstBlog&quot;.</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210222227033.jpg\" alt=\"网站在本地的储存位置\" /></p>\n<h4 id=\"然后-2\"><a class=\"anchor\" href=\"#然后-2\">#</a> 然后，</h4>\n<p>进入此文件夹，在此处唤出 git 命令行（鼠标空白处右键 &gt; <em><strong>Git Bash Here</strong></em>）, 输入以下命令完成初始化：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init .</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></p>\n<p>初始化成功效果如下：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init .</span><br><span class=\"line\">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class=\"line\">INFO  Install dependencies</span><br><span class=\"line\">INFO  Start blogging with Hexo!</span><br><span class=\"line\"></span><br><span class=\"line\">$ npm install</span><br><span class=\"line\"></span><br><span class=\"line\">up to date in 1s</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"紧接着\"><a class=\"anchor\" href=\"#紧接着\">#</a> 紧接着，</h4>\n<p>这时当前文件夹里会自动生成一些文件和文件夹，初始化完成后就可以在本地测试效果了：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo s</span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000/ . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p><strong>hexo s</strong> 是开启本地的 Hexo 服务器的命令，这时可以打开浏览器，在地址栏中输入  <code>localhost:4000</code>  就可以看到本地的网页效果了。</p>\n</blockquote>\n<p>效果大致如下：</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202211042014195.jpg\" alt=\"效果测试\" /></p>\n<h4 id=\"最后\"><a class=\"anchor\" href=\"#最后\">#</a> 最后，</h4>\n<p>按 <em><strong>Ctrl+C</strong></em> 中断退出服务器的运行，至此，基础的模版页面便已经搭建好了。</p>\n<h6 id=\"注hexo-s-命令也可以换成-hexo-server-两者是等价的\"><a class=\"anchor\" href=\"#注hexo-s-命令也可以换成-hexo-server-两者是等价的\">#</a> 注： <code>hexo s</code>  命令也可以换成  <code>hexo server</code>  ，两者是等价的</h6>\n<h3 id=\"生成静态文件\"><a class=\"anchor\" href=\"#生成静态文件\">#</a> 生成静态文件</h3>\n<p>由于平台原因（GitHub Page 只支持静态页面和文件），所以在博客部署前需要先生成对应的静态文件，然后再将其部署到 GitHub</p>\n<p>所需命令如下：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"comment\"># 该命令是将上一次部署时生成的静态文件进行清除，防止在多次生成静态文件时缓存错误</span></span><br><span class=\"line\"></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 该命令等价于 hexo generate</span></span><br></pre></td></tr></table></figure></p>\n<p>效果如下：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Deleted database.</span><br><span class=\"line\"></span><br><span class=\"line\">$ hexo g</span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Files loaded <span class=\"keyword\">in</span> 111 ms</span><br><span class=\"line\">INFO  Generated: archives/index.html</span><br><span class=\"line\">INFO  Generated: archives/2022/10/index.html</span><br><span class=\"line\">INFO  Generated: index.html</span><br><span class=\"line\">INFO  Generated: fancybox/jquery.fancybox.min.css</span><br><span class=\"line\">INFO  Generated: archives/2022/index.html</span><br><span class=\"line\">INFO  Generated: js/script.js</span><br><span class=\"line\">INFO  Generated: css/style.css</span><br><span class=\"line\">INFO  Generated: css/fonts/fontawesome-webfont.woff2</span><br><span class=\"line\">INFO  Generated: fancybox/jquery.fancybox.min.js</span><br><span class=\"line\">INFO  Generated: css/fonts/fontawesome-webfont.woff</span><br><span class=\"line\">INFO  Generated: js/jquery-3.4.1.min.js</span><br><span class=\"line\">INFO  Generated: css/fonts/fontawesome-webfont.eot</span><br><span class=\"line\">INFO  Generated: 2022/10/23/hello-world/index.html</span><br><span class=\"line\">INFO  Generated: css/fonts/FontAwesome.otf</span><br><span class=\"line\">INFO  Generated: css/fonts/fontawesome-webfont.ttf</span><br><span class=\"line\">INFO  Generated: css/images/banner.jpg</span><br><span class=\"line\">INFO  Generated: css/fonts/fontawesome-webfont.svg</span><br><span class=\"line\">INFO  17 files generated <span class=\"keyword\">in</span> 268 ms</span><br></pre></td></tr></table></figure></p>\n<p>此时当前文件夹下生成了一个 public 文件夹用于储存生成的静态文件，到时候部署也是部署这个文件夹上去；</p>\n<p>另外，如果  <code>hexo clean</code>  命令生效，则效果如下：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Deleted database.</span><br><span class=\"line\">INFO  Deleted public folder.</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"将文件部署到github-pages上\"><a class=\"anchor\" href=\"#将文件部署到github-pages上\">#</a> 将文件部署到 GitHub Pages 上</h3>\n<p>为了更方便地完成部署，下载一个部署插件：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure></p>\n<p>然后，对网站存放的根文件夹 (我是 <em><strong>FirstBlog</strong></em> 文件夹) 里的 <em><strong>_config.yml</strong></em> 文件进行编辑配置：</p>\n<p>（使用 VS code 或其他的文本编辑器打开，甚至是 window 自带记事本也可）</p>\n<p>需要更改的原始代码：</p>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">John</span> <span class=\"string\">Doe</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">en</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">http://example.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"string\">deploy:&#x27;</span> <span class=\"string\">&#x27;</span></span><br></pre></td></tr></table></figure></p>\n<p>把它们更改为如下格式：</p>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Site</span></span><br><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">黑色天际线的博客空间</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"string\">&#x27;测试版&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"string\">&#x27;此博客空间为个人学习笔记上传处&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"string\">学习笔记</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"string\">寻光</span></span><br><span class=\"line\"><span class=\"comment\"># language: en</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">zh-CN</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"string\">&#x27;Asia/Shanghai&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">http://Black-Skyline.github.io</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/Black-Skyline/Black-Skyline.github.io</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">Here</span> <span class=\"string\">comes</span> <span class=\"string\">the</span> <span class=\"string\">update</span></span><br></pre></td></tr></table></figure></p>\n<p>注：</p>\n<p><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"comment\"># 网站标题</span></span><br><span class=\"line\"><span class=\"attr\">subtitle:</span> <span class=\"comment\"># 网站副标题</span></span><br><span class=\"line\"><span class=\"attr\">description:</span> <span class=\"comment\"># 网站的描述</span></span><br><span class=\"line\"><span class=\"attr\">keywords:</span> <span class=\"comment\"># 网站关键词</span></span><br><span class=\"line\"><span class=\"attr\">author:</span> <span class=\"comment\"># 作者</span></span><br><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"comment\"># 语言种类</span></span><br><span class=\"line\"><span class=\"attr\">timezone:</span> <span class=\"comment\"># 世界时区</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"comment\"># 使用Github Pages就要写成 &#x27;https://github的用户名.github.io&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span>  <span class=\"comment\"># 部署方式</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/Black-Skyline/Black-Skyline.github.io</span> <span class=\"comment\"># 仓库的地址(网址)</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span>  <span class=\"comment\"># 使用的github分支</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">Here</span> <span class=\"string\">comes</span> <span class=\"string\">the</span> <span class=\"string\">update</span>  <span class=\"comment\"># 每次部署成功后GitHub的仓库里出现的更新信息</span></span><br></pre></td></tr></table></figure></p>\n<p>完成后，保存退出编辑，并开始部署：</p>\n<p>在 git 命令行中输入  <code>hexo d</code>  或  <code>hexo deploy</code>  ，成功的效果如下：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Deploying: git</span><br><span class=\"line\">INFO  Clearing .deploy_git folder...</span><br><span class=\"line\">INFO  Copying files from public folder...</span><br><span class=\"line\">INFO  Copying files from extend <span class=\"built_in\">dirs</span>...</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> 2022/10/23/hello-world/index.html.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> archives/2022/10/index.html.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> archives/2022/index.html.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> archives/index.html.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> css/fonts/fontawesome-webfont.svg.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> css/style.css.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> fancybox/jquery.fancybox.min.js.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> index.html.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> js/jquery-3.4.1.min.js.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF <span class=\"keyword\">in</span> js/script.js.</span><br><span class=\"line\">The file will have its original line endings <span class=\"keyword\">in</span> your working directory</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\">Enumerating objects: 34, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Counting objects: 100% (34/34), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Delta compression using up to 12 threads</span><br><span class=\"line\">Compressing objects: 100% (26/26), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Writing objects: 100% (34/34), 882.38 KiB | 13.79 MiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Total 34 (delta 3), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">remote: Resolving deltas: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote:</span><br><span class=\"line\">remote: Create a pull request <span class=\"keyword\">for</span> <span class=\"string\">&#x27;master&#x27;</span> on GitHub by visiting:</span><br><span class=\"line\">remote:      https://github.com/Black-Skyline/Black-Skyline.github.io/pull/new/master</span><br><span class=\"line\">remote:</span><br><span class=\"line\">To https://github.com/Black-Skyline/Black-Skyline.github.io</span><br><span class=\"line\"> * [new branch]      HEAD -&gt; master</span><br><span class=\"line\">branch <span class=\"string\">&#x27;master&#x27;</span> <span class=\"built_in\">set</span> up to track <span class=\"string\">&#x27;https://github.com/Black-Skyline/Black-Skyline.github.io/master&#x27;</span>.</span><br><span class=\"line\">INFO  Deploy <span class=\"keyword\">done</span>: git</span><br></pre></td></tr></table></figure></p>\n<p>注：可能会失败几次，大概率是因为与 github 的网络通信不太稳定，所以可多尝试几次</p>\n<p>部署成功后，GitHub 对应仓库的截图如下：</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210231315277.jpg\" alt=\"提交部署后的仓库截图\" /></p>\n<p>此时博客可以对外访问了，在网址栏输入  <code>black-skyline.github.io</code>  即可访问</p>\n<h3 id=\"建立一个备份\"><a class=\"anchor\" href=\"#建立一个备份\">#</a> 建立一个备份</h3>\n<p>使用版本控制器  <code>git</code>  新建一个分支<strong> backup</strong> 用于备份本地文件：</p>\n<p><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br><span class=\"line\">Initialized empty Git repository in D:/HexoBlog/FirstBlog/.git/</span><br><span class=\"line\"></span><br><span class=\"line\">用户名@git命令行名 /d/HexoBlog/FirstBlog (master)</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">warning: LF will be replaced by CRLF in package-lock.json.</span><br><span class=\"line\">The file will have its original line endings in your working directory</span><br><span class=\"line\">warning: LF will be replaced by CRLF in package.json.</span><br><span class=\"line\">The file will have its original line endings in your working directory</span><br><span class=\"line\"></span><br><span class=\"line\">用户名@git命令行名 /d/HexoBlog/FirstBlog (master)</span><br><span class=\"line\">$ git commit -m &quot;first commit in local branch master&quot;</span><br><span class=\"line\">[master (root-commit) abc1925] first commit in local branch master</span><br><span class=\"line\"> 11 files changed, 4331 insertions(+)</span><br><span class=\"line\"> create mode 100644 .github/dependabot.yml</span><br><span class=\"line\"> create mode 100644 .gitignore</span><br><span class=\"line\"> create mode 100644 _config.landscape.yml</span><br><span class=\"line\"> create mode 100644 _config.yml</span><br><span class=\"line\"> create mode 100644 package-lock.json</span><br><span class=\"line\"> create mode 100644 package.json</span><br><span class=\"line\"> create mode 100644 scaffolds/draft.md</span><br><span class=\"line\"> create mode 100644 scaffolds/page.md</span><br><span class=\"line\"> create mode 100644 scaffolds/post.md</span><br><span class=\"line\"> create mode 100644 source/_posts/hello-world.md</span><br><span class=\"line\"> create mode 100644 themes/.gitkeep</span><br><span class=\"line\"></span><br><span class=\"line\">用户名@git命令行名 /d/HexoBlog/FirstBlog (master)</span><br><span class=\"line\">$ git checkout -b backup</span><br><span class=\"line\">Switched to a new branch &#x27;backup&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">用户名@git命令行名 /d/HexoBlog/FirstBlog (backup)</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"></span><br><span class=\"line\">用户名@git命令行名 /d/HexoBlog/FirstBlog (backup)</span><br><span class=\"line\">$ git commit -m &quot;first commit in local branch backup&quot;</span><br><span class=\"line\">On branch backup</span><br><span class=\"line\">nothing to commit, working tree clean</span><br><span class=\"line\"></span><br><span class=\"line\">用户名@git命令行名 /d/HexoBlog/FirstBlog (backup)</span><br><span class=\"line\">$ git branch -l</span><br><span class=\"line\">* backup</span><br><span class=\"line\">  master</span><br></pre></td></tr></table></figure></p>\n<p>可以看到，有两个分支 <code>backup</code> 、 <code>master</code>  前者用于本地备份，后者用于提交部署；</p>\n<p>后面就是把本篇进行提交部署了.</p>\n<h1 id=\"level-11-plus\"><a class=\"anchor\" href=\"#level-11-plus\">#</a> Level 1.1 Plus：</h1>\n<blockquote>\n<h5 id=\"关于hexo博客的主题美化\"><a class=\"anchor\" href=\"#关于hexo博客的主题美化\">#</a> <strong>关于 hexo 博客的主题美化：</strong></h5>\n<h4 id=\"主题选择\"><a class=\"anchor\" href=\"#主题选择\">#</a> 主题选择：</h4>\n<p><strong><a href=\"https://shoka.lostyu.me/\">shoka</a></strong>（该主题部署起来有 Bug，等之后出解决方案）</p>\n<h4 id=\"材料准备-2\"><a class=\"anchor\" href=\"#材料准备-2\">#</a> 材料（准备）：</h4>\n<p>工具类：<strong>git 、 hexo</strong></p>\n<p>环境类：<strong>Node.js 、 github</strong></p>\n</blockquote>\n<h3 id=\"准备工作\"><a class=\"anchor\" href=\"#准备工作\">#</a> 准备工作</h3>\n<p>进入博客所在文件夹，在此处唤出 git 命令行（鼠标空白处右键 &gt; <em><strong>Git Bash Here</strong></em>）</p>\n<p>下面的两个准备工作的部分可以参照 shoka 的 <a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\">官网教程</a>:</p>\n<p><a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/\">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/</a></p>\n<h4 id=\"下载主题本体文件\"><a class=\"anchor\" href=\"#下载主题本体文件\">#</a> 下载主题本体文件：</h4>\n<p>在命令行里键入下面的命令：</p>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</span><br></pre></td></tr></table></figure></p>\n<p>这个命令的作用是从 github 上把 shoka 这个主题文件下载下来，并存放到 ** <code>博客根目录/themes/shoka</code> ** 这个路径下，当然咱们也可以用其他手段下载这个文件，这里不多赘述</p>\n<h4 id=\"主题依赖安装\"><a class=\"anchor\" href=\"#主题依赖安装\">#</a> 主题依赖安装：</h4>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm un hexo-renderer-marked --save <span class=\"comment\"># 这一行是删除之前本地存在的hexo-renderer-marked插件，保证之后下载到最新版</span></span><br><span class=\"line\">npm i hexo-renderer-multi-markdown-it --save</span><br><span class=\"line\">npm i hexo-autoprefixer --save</span><br><span class=\"line\">npm i hexo-algolia --save</span><br><span class=\"line\">npm i hexo-algoliasearch --save</span><br><span class=\"line\">npm i hexo-symbols-count-time --save</span><br><span class=\"line\">npm i hexo-feed --save</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"进行部署\"><a class=\"anchor\" href=\"#进行部署\">#</a> 进行部署</h3>\n<p>由于 shoka 的渲染有 Bug，故先放弃此主题美化方案，等待后续出替代方案或解决方案（也许会有……）</p>\n<h1 id=\"level-2\"><a class=\"anchor\" href=\"#level-2\">#</a> Level 2 :</h1>\n<blockquote>\n<h6 id=\"一个简单的基于obs数据存储服务的图床搭建较为简略\"><a class=\"anchor\" href=\"#一个简单的基于obs数据存储服务的图床搭建较为简略\">#</a> 一个简单的基于 OBS 数据存储服务的图床搭建（较为简略）</h6>\n<h4 id=\"搭建方式-2\"><a class=\"anchor\" href=\"#搭建方式-2\">#</a> 搭建方式：</h4>\n<p><strong>华为云 OBS</strong> + <strong>PicGo</strong></p>\n<h4 id=\"材料准备-3\"><a class=\"anchor\" href=\"#材料准备-3\">#</a> 材料（准备）：</h4>\n<p>服务器：<strong>华为云 OBS</strong></p>\n<p>工具类：**PicGo **</p>\n</blockquote>\n<p>考虑到篇幅，这里就不对服务器端相关配置做相关介绍了，直接直入主题:</p>\n<blockquote>\n<h3 id=\"该怎么让你从本地放入markdwon文档的图片成为网络图片能从非本地看到\"><a class=\"anchor\" href=\"#该怎么让你从本地放入markdwon文档的图片成为网络图片能从非本地看到\">#</a> 该怎么让你从本地放入 MarkDwon 文档的图片成为 “网络图片”—— 能从非本地看到</h3>\n</blockquote>\n<h2 id=\"picgo\"><a class=\"anchor\" href=\"#picgo\">#</a> PicGO</h2>\n<h4 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h4>\n<h6 id=\"是什么\"><a class=\"anchor\" href=\"#是什么\">#</a> 是什么</h6>\n<p>一个软件，GitHub 上的开源项目，功能强大（具体可百度）</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210231346805.jpg\" alt=\"picgo是啥\" /></p>\n<h6 id=\"有啥用\"><a class=\"anchor\" href=\"#有啥用\">#</a> 有啥用</h6>\n<p>可以简单的理解为本地端与服务器端的<strong>中转站</strong>，本地图片可经由它发送到服务器成为网络图片</p>\n<h4 id=\"下载完后开始配置\"><a class=\"anchor\" href=\"#下载完后开始配置\">#</a> 下载完后开始配置</h4>\n<p>首先，如上图所说，本体式没有华为云的图床支持的，因此需要配置支持插件</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210231349119.jpg\" alt=\"picgo插件配置\" /></p>\n<p>然后进入<em><strong>图床设置</strong></em>：</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210231355234.jpg\" alt=\"华为云OBS图床设置\" /></p>\n<p>其中，第一行是由华为云服务器随机生成的一个类似于上传功能的” 接口账号 “。第二行就是对应的密码了，第五行就是图片在服务器里的存放目录。其他的均是在服务器的设置，不进行赘述。</p>\n<p>配置完成后可以去 “<em><strong>上传区</strong></em>” 试一试，这里就不作演示了。</p>\n<h2 id=\"typora-中设置picgo-图床实现图片自动上传\"><a class=\"anchor\" href=\"#typora-中设置picgo-图床实现图片自动上传\">#</a> Typora 中设置 PicGo 图床实现图片自动上传</h2>\n<h4 id=\"配置图像设置\"><a class=\"anchor\" href=\"#配置图像设置\">#</a> 配置图像设置</h4>\n<p>从左上角 “<strong>文件</strong>” 选项里点击 “<strong>偏好设置</strong>”，勾选上下图的选项</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210231407330.jpg\" alt=\"typora里的图像设置\" /></p>\n<h4 id=\"验证图片上传是否成功\"><a class=\"anchor\" href=\"#验证图片上传是否成功\">#</a> 验证图片上传是否成功</h4>\n<p>点击上图的 “<strong>验证图片上传选项</strong>”，等待一下，如果出现 PicGo 的上传成功提示，那就算配置成功</p>\n<p><img src=\"https://obssh.obs.cn-east-3.myhuaweicloud.com/img_xunguang/202210231411184.jpg\" alt=\"typora上传验证\" /></p>\n",
            "tags": [
                "更多",
                "作业",
                "redrock",
                "作业",
                "hexo"
            ]
        }
    ]
}